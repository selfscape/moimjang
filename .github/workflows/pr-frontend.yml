name: PR Frontend Build and Push

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - '.github/workflows/pr-frontend.yml'

env:
  ECR_REGISTRY: public.ecr.aws/x2l9m6x8/selfscape/moimjang

jobs:
  # 변경된 앱 감지
  detect-changes:
    runs-on: ubuntu-24.04
    outputs:
      admin-changed: ${{ steps.changes.outputs.admin }}
      contents-changed: ${{ steps.changes.outputs.contents }}
      seller-changed: ${{ steps.changes.outputs.seller }}
      packages-changed: ${{ steps.changes.outputs.packages }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Detect changes
      uses: dorny/paths-filter@v3
      id: changes
      with:
        filters: |
          admin:
            - 'frontend/apps/admin/**'
          contents:
            - 'frontend/apps/contents/**'
          seller:
            - 'frontend/apps/seller/**'
          packages:
            - 'frontend/packages/**'

  # Admin 앱 빌드
  build-admin:
    needs: detect-changes
    if: needs.detect-changes.outputs.admin-changed == 'true' || needs.detect-changes.outputs.packages-changed == 'true'
    runs-on: ubuntu-24.04
    environment: 'production'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
        
    - name: Login to Amazon ECR Public
      id: login-ecr-public
      uses: aws-actions/amazon-ecr-login@v2
      with:
        registry-type: public
      
    - name: Build Docker image
      run: |
        cd frontend
        echo "Building admin app..."
        docker build \
          --build-arg REACT_APP_SERVER_URI="${{ vars.REACT_APP_SERVER_URI }}" \
          --build-arg REACT_APP_NODE_ENV="${{ vars.REACT_APP_NODE_ENV }}" \
          --build-arg REACT_APP_DANGEROUSLY_DISABLE_HOST_CHECK="${{ vars.REACT_APP_DANGEROUSLY_DISABLE_HOST_CHECK }}" \
          --build-arg REACT_APP_ENVIRONMENT="${{ vars.REACT_APP_ENVIRONMENT }}" \
          --build-arg REACT_APP_SITE_URL="${{ vars.REACT_APP_SITE_URL }}" \
          -f apps/admin/Dockerfile \
          -t moimjang-admin .
          
    - name: Tag and Push Docker images
      run: |
        TODAY=$(date +%Y-%m-%d)
        PR_NUMBER=${{ github.event.number }}
        
        # Tag images
        docker tag moimjang-admin ${{ env.ECR_REGISTRY }}-admin:pr-$PR_NUMBER
        docker tag moimjang-admin ${{ env.ECR_REGISTRY }}-admin:latest
        docker tag moimjang-admin ${{ env.ECR_REGISTRY }}-admin:$TODAY
        
        # Push images
        docker push ${{ env.ECR_REGISTRY }}-admin:pr-$PR_NUMBER
        docker push ${{ env.ECR_REGISTRY }}-admin:latest
        docker push ${{ env.ECR_REGISTRY }}-admin:$TODAY
        
        echo "Successfully pushed admin app to ECR"

  # Contents 앱 빌드
  build-contents:
    needs: detect-changes
    if: needs.detect-changes.outputs.contents-changed == 'true' || needs.detect-changes.outputs.packages-changed == 'true'
    runs-on: ubuntu-24.04
    environment: 'production'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
        
    - name: Login to Amazon ECR Public
      id: login-ecr-public
      uses: aws-actions/amazon-ecr-login@v2
      with:
        registry-type: public
      
    - name: Build Docker image
      run: |
        cd frontend
        echo "Building contents app..."
        docker build \
          --build-arg NEXT_PUBLIC_SERVER_URL="${{ vars.REACT_APP_SERVER_URI }}" \
          --build-arg NEXT_PUBLIC_NODE_ENV="${{ vars.REACT_APP_NODE_ENV }}" \
          --build-arg NEXT_PUBLIC_DANGEROUSLY_DISABLE_HOST_CHECK="${{ vars.REACT_APP_DANGEROUSLY_DISABLE_HOST_CHECK }}" \
          --build-arg NEXT_PUBLIC_ENVIRONMENT="${{ vars.REACT_APP_ENVIRONMENT }}" \
          --build-arg NEXT_PUBLIC_SITE_URL="${{ vars.REACT_APP_SITE_URL }}" \
          -f apps/contents/Dockerfile \
          -t moimjang-contents .
          
    - name: Tag and Push Docker images
      run: |
        TODAY=$(date +%Y-%m-%d)
        PR_NUMBER=${{ github.event.number }}
        
        # Tag images
        docker tag moimjang-contents ${{ env.ECR_REGISTRY }}-contents:pr-$PR_NUMBER
        docker tag moimjang-contents ${{ env.ECR_REGISTRY }}-contents:latest
        docker tag moimjang-contents ${{ env.ECR_REGISTRY }}-contents:$TODAY
        
        # Push images
        docker push ${{ env.ECR_REGISTRY }}-contents:pr-$PR_NUMBER
        docker push ${{ env.ECR_REGISTRY }}-contents:latest
        docker push ${{ env.ECR_REGISTRY }}-contents:$TODAY
        
        echo "Successfully pushed contents app to ECR"

  # Seller 앱 빌드
  build-seller:
    needs: detect-changes
    if: needs.detect-changes.outputs.seller-changed == 'true' || needs.detect-changes.outputs.packages-changed == 'true'
    runs-on: ubuntu-24.04
    environment: 'production'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
        
    - name: Login to Amazon ECR Public
      id: login-ecr-public
      uses: aws-actions/amazon-ecr-login@v2
      with:
        registry-type: public
      
    - name: Build Docker image
      run: |
        cd frontend
        echo "Building seller app..."
        docker build \
          --build-arg NEXT_PUBLIC_SERVER_URL="${{ vars.REACT_APP_SERVER_URI }}" \
          --build-arg NEXT_PUBLIC_NODE_ENV="${{ vars.REACT_APP_NODE_ENV }}" \
          --build-arg NEXT_PUBLIC_DANGEROUSLY_DISABLE_HOST_CHECK="${{ vars.REACT_APP_DANGEROUSLY_DISABLE_HOST_CHECK }}" \
          --build-arg NEXT_PUBLIC_ENVIRONMENT="${{ vars.REACT_APP_ENVIRONMENT }}" \
          --build-arg NEXT_PUBLIC_SITE_URL="${{ vars.REACT_APP_SITE_URL }}" \
          -f apps/seller/Dockerfile \
          -t moimjang-seller .
          
    - name: Tag and Push Docker images
      run: |
        TODAY=$(date +%Y-%m-%d)
        PR_NUMBER=${{ github.event.number }}
        
        # Tag images
        docker tag moimjang-seller ${{ env.ECR_REGISTRY }}-seller:pr-$PR_NUMBER
        docker tag moimjang-seller ${{ env.ECR_REGISTRY }}-seller:latest
        docker tag moimjang-seller ${{ env.ECR_REGISTRY }}-seller:$TODAY
        
        # Push images
        docker push ${{ env.ECR_REGISTRY }}-seller:pr-$PR_NUMBER
        docker push ${{ env.ECR_REGISTRY }}-seller:latest
        docker push ${{ env.ECR_REGISTRY }}-seller:$TODAY
        
        echo "Successfully pushed seller app to ECR" 