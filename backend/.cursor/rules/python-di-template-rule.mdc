---
description: 
globs: 
alwaysApply: false
---
Always respond in 한글

# Your rule content
코드 관리 전략
- 코드제안은 python dependency injector 구조를 참조할 것
- 엔드포인트(@endpoints.py)에 구현되는 로직은 모두 서비스(@services.py) 레이어에 구현할 것
- 제안된 코드의 기능을 변경할 경우, 동일하게 기능하는 모든 매서드에 적용해.
- DB 엑세스 관련 함수는 모두 레포지토리(@repositories.py) 레이어에 구현할 것
- 구현체는 의존성 주입 패턴을 따를 것
- 최대한 기존 구현체를 활용할 것. 없으면 생성할 것.
- 서비스의 의존성이 변경될 경우 의존성주입(container : @containers.py )에 대한 수정안을 포함해.


서비스 레이어 구성시 고려해야 할 것
- 모든 에러 예외처리는 서비스 레이어에서 진행할 것
- 서비스는 하나의 엔드포인트에 대해 대응할 것. 레포지토리의 단일 매서드는 한 개의 기능을 수행할 것.
- 레포지토리의 Notfound 에러는 http 에러로 변환할 것.


레포지토리 레이어 구성시 고려해야 할 것
- 레포지토리 인자는 스키마가 되도록 구현하고 반환 형태는 스키마가 되도록 변환할 것
- 레포지토리에서 GET 매서드에서 쿼리의 결과가 없을 때는 None을 반환, UPDATE/POST 매서드에서 쿼리 결과가 없을 때는 NotFoundError를 레이즈 할 것.
