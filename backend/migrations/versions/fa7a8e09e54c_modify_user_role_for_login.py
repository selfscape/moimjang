"""Modify user role for login

Revision ID: fa7a8e09e54c
Revises: 0e9599168a15
Create Date: 2025-02-20 05:40:13.995878

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'fa7a8e09e54c'
down_revision: Union[str, None] = '0e9599168a15'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('email', sa.String(), nullable=True))
    op.execute("UPDATE users SET email = username || '@example.com'")
    op.alter_column('users', 'email',
                    existing_type=sa.String(),
                    nullable=False)
    op.add_column('users', sa.Column('hashed_password', sa.String(length=255), nullable=True))
    op.execute("UPDATE users SET hashed_password = password")
    op.alter_column('users', 'hashed_password',
                    existing_type=sa.String(length=255),
                    nullable=False)
    op.add_column('users', sa.Column('role', sa.String(), nullable=True))
    op.execute("UPDATE users SET role = 'user'")
    op.alter_column('users', 'role',
                    existing_type=sa.String(),
                    nullable=False)
    op.create_unique_constraint('uq_users_email', 'users', ['email'])
    op.drop_column('users', 'password') 
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('password', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.drop_constraint('uq_users_email', 'users', type_='unique')
    op.drop_column('users', 'role')
    op.drop_column('users', 'hashed_password')
    op.drop_column('users', 'email')
    # ### end Alembic commands ###
